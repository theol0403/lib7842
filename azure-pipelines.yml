resources:
  containers:
    - container: lib7842image
      image: "theol0403/lib7842-image:latest"

jobs:
  - job: Build
    timeoutInMinutes: 15

    pool:
      vmImage: "ubuntu-latest"
    container: lib7842image

    steps:
      - checkout: self
        submodules: true

      - bash: |
          make -j4
          make template
          mkdir -p artifacts
          cp *.zip artifacts
        displayName: Build Template

      - task: PublishPipelineArtifact@0
        inputs:
          targetPath: artifacts
          artifactName: template
        condition: succeeded()
        displayName: "Publish Template"

      - bash: |
          make
        displayName: Build Arm Binaries

      - bash: |
          cd test/
          make
          mkdir testBinary
          cp ./bin/main.exe testBinary
        displayName: Build Tests

      - task: PublishPipelineArtifact@0
        inputs:
          targetPath: test/testBinary
          artifactName: test
        condition: succeeded()
        displayName: "Publish Tests"

      - bash: |
          valgrind --tool=memcheck --leak-check=full --leak-resolution=med --show-leak-kinds=all --undef-value-errors=yes --track-origins=yes --show-reachable=no ./test/bin/main.exe
        displayName: "Run Valgrind"
        continueOnError: true

      - bash: |
          ./test/bin/main.exe
        displayName: Run Tests

      - bash: |
          ./cppCheck.sh
        displayName: "Run CppCheck"
        condition: always()

      - bash: |
          valgrind --tool=callgrind  --error-exitcode=0 ./test/bin/main.exe
          mkdir -p callgrindOut
          cp callgrind.out.* callgrindOut
        displayName: "Run Callgrind"

      - task: PublishPipelineArtifact@0
        inputs:
          targetPath: callgrindOut
          artifactName: callgrind
        condition: succeeded()
        displayName: "Publish Callgrind"
